name: Build and Deploy Code
run-name: ${{ github.repository }} Build n Deploy ðŸš€
on: [push]

jobs:
  build-test:
    runs-on: ubuntu-latest
    env: 
      DB_HOSTNAME: ${{secrets.DB_HOSTNAME}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      TEST_DB_NAME: ${{secrets.TEST_DB_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      TOKEN_ALGORITHM: ${{secrets.TOKEN_ALGORITHM}}
      TOKEN_EXPIRE: ${{secrets.TOKEN_EXPIRE}}
    services: 
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.TEST_DB_NAME}}
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    
    steps:
      - name: Install uuid to pgsql
        run: PGPASSWORD=${{secrets.DB_PASSWORD}} psql -h ${{secrets.DB_HOSTNAME}} -p ${{secrets.DB_PORT}} -U ${{secrets.DB_USERNAME}} -d ${{secrets.TEST_DB_NAME}} -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"
      - name: Pulling git repo
        uses: actions/checkout@v3
      - name: Install python v3.11
        uses: actions/setup-python@v4
        with: 
          python-version: "3.11"
      - name: Update pip âœ…
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Unit tests ðŸ”Ž
        run: | 
          pip install pytest
          pytest -v
      #- name: Login to Docker Hub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{secrets.DOCKER_USERNAME}}
      #    password: ${{secrets.DOCKER_TOKEN}}
      #- name: Set up Docker Buildx
      #  id: buildx
      #  uses: docker/setup-buildx-action@v2
      #- name: Build and push
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: .
      #   file: ./Dockerfile
      #    push: true
      #    tags: ${{ secrets.DOCKER_USERNAME }}/testing-fastapi:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Deploying
        run: echo "Deploying latest build"
      - name: Deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          script: |
            cd testing-FastAPI
            git pull
            source venv/bin/activate
            pip install -r requirements.txt
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart gunicorn
